package org.xwiki.crypto.password.internal;


import org.bouncycastle.util.encoders.Base64;
import org.hamcrest.CoreMatchers;
import org.hamcrest.Matcher;
import org.hamcrest.core.IsEqual;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Rule;
import org.junit.Test;
import org.xwiki.crypto.AsymmetricKeyFactory;
import org.xwiki.crypto.cipher.internal.symmetric.factory.BcAesCbcPaddedCipherFactory;
import org.xwiki.crypto.cipher.internal.symmetric.factory.BcBlowfishCbcPaddedCipherFactory;
import org.xwiki.crypto.cipher.internal.symmetric.factory.BcDesCbcPaddedCipherFactory;
import org.xwiki.crypto.cipher.internal.symmetric.factory.BcDesEdeCbcPaddedCipherFactory;
import org.xwiki.crypto.cipher.internal.symmetric.factory.BcRc2CbcPaddedCipherFactory;
import org.xwiki.crypto.internal.DefaultSecureRandomProvider;
import org.xwiki.crypto.internal.asymmetric.keyfactory.BcRSAKeyFactory;
import org.xwiki.crypto.internal.asymmetric.keyfactory.DefaultKeyFactory;
import org.xwiki.crypto.params.cipher.asymmetric.PrivateKeyParameters;
import org.xwiki.crypto.password.PasswordToByteConverter;
import org.xwiki.crypto.password.PrivateKeyPasswordBasedEncryptor;
import org.xwiki.crypto.password.internal.kdf.factory.BcPKCS5S2KeyDerivationFunctionFactory;
import org.xwiki.crypto.password.internal.kdf.factory.BcScryptKeyDerivationFunctionFactory;
import org.xwiki.crypto.password.internal.kdf.factory.DefaultKeyDerivationFunctionFactory;
import org.xwiki.crypto.password.internal.pbe.factory.BcPBES2AesCipherFactory;
import org.xwiki.crypto.password.internal.pbe.factory.BcPBES2BlowfishCipherFactory;
import org.xwiki.crypto.password.internal.pbe.factory.BcPBES2CipherFactory;
import org.xwiki.crypto.password.internal.pbe.factory.BcPBES2DesCipherFactory;
import org.xwiki.crypto.password.internal.pbe.factory.BcPBES2DesEdeCipherFactory;
import org.xwiki.crypto.password.internal.pbe.factory.BcPBES2Rc2CipherFactory;
import org.xwiki.test.annotation.ComponentList;
import org.xwiki.test.mockito.MockitoComponentMockingRule;


@ComponentList({ DefaultKeyDerivationFunctionFactory.class, BcPKCS5S2KeyDerivationFunctionFactory.class, BcPBES2Rc2CipherFactory.class, BcRc2CbcPaddedCipherFactory.class, BcPBES2DesCipherFactory.class, BcDesCbcPaddedCipherFactory.class, BcPBES2DesEdeCipherFactory.class, BcDesEdeCbcPaddedCipherFactory.class, BcPBES2BlowfishCipherFactory.class, BcBlowfishCbcPaddedCipherFactory.class, BcPBES2AesCipherFactory.class, BcAesCbcPaddedCipherFactory.class, BcScryptKeyDerivationFunctionFactory.class, BcPBES2CipherFactory.class, BcRSAKeyFactory.class, DefaultKeyFactory.class, DefaultSecureRandomProvider.class })
public class AmplDefaultPrivateKeyPasswordBasedEncryptorTest {
    private static final byte[] PASSWORD = PasswordToByteConverter.convert("changeit");

    private static final byte[] RSAKEY = Base64.decode(("MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDIY6+Wgj6MqdEd" + (((((((((((((((((((((((("Yq6FgH5xMgTBmFqAonR/eshjxY2C6MHs+WmCmNSDik2NgZWIaODvOF9uOEK2U0Zf" + "JEG2LcZxoeIEgg/mfII2f4DLy1JYajm/llzwFBzAd/Rkcs3qwP2ba5VKn/pSqNLl") + "nKHMXkXO+9SjfHDx95x2dK1dB8eGQGculOMcTm3uK7UlWNO4TSlwG9qHZ1aoM3GI") + "g5C1fIpbxJqDVjFq6fFAapE3KRIWIQmKd3E5ICcDErqr/AapxnfO8UFNxVWSOLW7") + "ZAfis4w/c8/EAgyQHw42R0dNyjUOZsToF8McCsOpRjGolSU8aUyqspvd8IWJPd5d") + "6HBHueXNAgMBAAECggEAV3q9MpVVPQ79TTjBO2Km0D+nt+QMzk8dUHGHfZbGejmm") + "Pw96shqJ24rK5FWHs+8lEwmnD3TcGsAr3mjzjtZY5U5oXtNwoYwFRElRLqZqIlLt") + "NugrVltRWeyD8j30CuGJVQoYOGWyX9d3ielg8NjO3NcvMtembttLoKK68/vrbH11") + "9W7wr5p8/xyMfyl9curnmCFk5QqJ1FBpjPWY05NDIBCUJB0tGAqViCpxEeWPSlvb") + "xcElqWfdbtnsYUxYU+iOTHHotoKnz4nLHYK2/njMhlCEyMXfu1DJOd8rg5yXewJF") + "v6NhXgWStSexAT1bZ17LROazVcHfWB9QmXF1Fm7vOQKBgQD+dZxPDOi3Y4gCFegn") + "Z+epNyl2aPTkseEZxrIqPKLHsGxUfYjQqkX2RdfTrq2vf4vFlN6uCXhSlZKXfLH/") + "iQ8FAzqenhVVHK2fv5xB0SE5zNmcHDrHshl+/zUNI2u5AMFECVO2SVbgoFjvgkou") + "FolK8XUXfHfb4f732LUyYI0lEwKBgQDJmkWHhzekz3P5iWaAt1SH8bZpt2hqa6Bx") + "A4VvMdtmjCxEDETN0Rb3CPYxw3qa3xGfW1y1j/49xi4gr69yaT2Tbca7PFGUmWRo") + "OJwfCUB5uBUi6UVytK19OVKReOm4666x8P3YO4cxxSI/HeoSU0HR1kkX9rGmrsGN") + "MgUQ15+FnwKBgAKf6/DUzUG3ARwkZbSiWb1hGEhkZMJHI29EoWnWHke5BiUI9nRQ") + "jVAxADzqvFfnFOYA1xssddVEPbLaUmu0WjdPBTfFoaqzFQdkzpPPOGyENGpr0B9n") + "MuQgdceg6eeKnnO5NOfYcdD3VnOCAInhKaFgRDjty7604hBkZ9oRLOOJAoGBAIJ+") + "dmUMlGr80XADjTLh+DhqsA1r542DDv44LkXUetS9BOYjHuIuZnQO+/UoOBNJMsn4") + "xGDNzN7FihQkRCeFkZL9arbFi3TpeUGw6vV38qEXE69eWVKvOuEkmpqJLphBDfom") + "KNmvZopDtTAvt9SWybL+xp9ZUpK26ZfwebD2MU63AoGBAOa2Kt01DxoqiWiQP/ds") + "Mc9wOw1zJsSmIK7wEiW3FkCz8uw3UgjF9ymYY/YAW3eZtuUpuxEzyENb9f21p4b2") + "zYoZ7nCUo4TmVXxgCjiEWglg3b/R3xjQr1dAABhTeI8bXMv5r/tMUsnS79uKqwGD") + "2Gc1syc3+055K4qcfZHH0XWu")));

    @Rule
    public final MockitoComponentMockingRule<PrivateKeyPasswordBasedEncryptor> mocker = new MockitoComponentMockingRule<PrivateKeyPasswordBasedEncryptor>(DefaultPrivateKeyPasswordBasedEncryptor.class);

    PrivateKeyPasswordBasedEncryptor encryptor;

    PrivateKeyParameters keyParameters;

    @Before
    public void configure() throws Exception {
        this.encryptor = this.mocker.getComponentUnderTest();
        this.keyParameters = ((AsymmetricKeyFactory) (this.mocker.getInstance(AsymmetricKeyFactory.class))).fromPKCS8(RSAKEY);
    }

    @Test(timeout = 10000)
    public void testEncryptDecryptDefault() throws Exception {
        this.encryptor.decrypt(PASSWORD, this.encryptor.encrypt(PASSWORD, this.keyParameters)).getEncoded();
        Matcher<byte[]> o_testEncryptDecryptDefault__4 = CoreMatchers.equalTo(RSAKEY);
        Assert.assertEquals("[<48>, <-126>, <4>, <-66>, <2>, <1>, <0>, <48>, <13>, <6>, <9>, <42>, <-122>, <72>, <-122>, <-9>, <13>, <1>, <1>, <1>, <5>, <0>, <4>, <-126>, <4>, <-88>, <48>, <-126>, <4>, <-92>, <2>, <1>, <0>, <2>, <-126>, <1>, <1>, <0>, <-56>, <99>, <-81>, <-106>, <-126>, <62>, <-116>, <-87>, <-47>, <29>, <98>, <-82>, <-123>, <-128>, <126>, <113>, <50>, <4>, <-63>, <-104>, <90>, <-128>, <-94>, <116>, <127>, <122>, <-56>, <99>, <-59>, <-115>, <-126>, <-24>, <-63>, <-20>, <-7>, <105>, <-126>, <-104>, <-44>, <-125>, <-118>, <77>, <-115>, <-127>, <-107>, <-120>, <104>, <-32>, <-17>, <56>, <95>, <110>, <56>, <66>, <-74>, <83>, <70>, <95>, <36>, <65>, <-74>, <45>, <-58>, <113>, <-95>, <-30>, <4>, <-126>, <15>, <-26>, <124>, <-126>, <54>, <127>, <-128>, <-53>, <-53>, <82>, <88>, <106>, <57>, <-65>, <-106>, <92>, <-16>, <20>, <28>, <-64>, <119>, <-12>, <100>, <114>, <-51>, <-22>, <-64>, <-3>, <-101>, <107>, <-107>, <74>, <-97>, <-6>, <82>, <-88>, <-46>, <-27>, <-100>, <-95>, <-52>, <94>, <69>, <-50>, <-5>, <-44>, <-93>, <124>, <112>, <-15>, <-9>, <-100>, <118>, <116>, <-83>, <93>, <7>, <-57>, <-122>, <64>, <103>, <46>, <-108>, <-29>, <28>, <78>, <109>, <-18>, <43>, <-75>, <37>, <88>, <-45>, <-72>, <77>, <41>, <112>, <27>, <-38>, <-121>, <103>, <86>, <-88>, <51>, <113>, <-120>, <-125>, <-112>, <-75>, <124>, <-118>, <91>, <-60>, <-102>, <-125>, <86>, <49>, <106>, <-23>, <-15>, <64>, <106>, <-111>, <55>, <41>, <18>, <22>, <33>, <9>, <-118>, <119>, <113>, <57>, <32>, <39>, <3>, <18>, <-70>, <-85>, <-4>, <6>, <-87>, <-58>, <119>, <-50>, <-15>, <65>, <77>, <-59>, <85>, <-110>, <56>, <-75>, <-69>, <100>, <7>, <-30>, <-77>, <-116>, <63>, <115>, <-49>, <-60>, <2>, <12>, <-112>, <31>, <14>, <54>, <71>, <71>, <77>, <-54>, <53>, <14>, <102>, <-60>, <-24>, <23>, <-61>, <28>, <10>, <-61>, <-87>, <70>, <49>, <-88>, <-107>, <37>, <60>, <105>, <76>, <-86>, <-78>, <-101>, <-35>, <-16>, <-123>, <-119>, <61>, <-34>, <93>, <-24>, <112>, <71>, <-71>, <-27>, <-51>, <2>, <3>, <1>, <0>, <1>, <2>, <-126>, <1>, <0>, <87>, <122>, <-67>, <50>, <-107>, <85>, <61>, <14>, <-3>, <77>, <56>, <-63>, <59>, <98>, <-90>, <-48>, <63>, <-89>, <-73>, <-28>, <12>, <-50>, <79>, <29>, <80>, <113>, <-121>, <125>, <-106>, <-58>, <122>, <57>, <-90>, <63>, <15>, <122>, <-78>, <26>, <-119>, <-37>, <-118>, <-54>, <-28>, <85>, <-121>, <-77>, <-17>, <37>, <19>, <9>, <-89>, <15>, <116>, <-36>, <26>, <-64>, <43>, <-34>, <104>, <-13>, <-114>, <-42>, <88>, <-27>, <78>, <104>, <94>, <-45>, <112>, <-95>, <-116>, <5>, <68>, <73>, <81>, <46>, <-90>, <106>, <34>, <82>, <-19>, <54>, <-24>, <43>, <86>, <91>, <81>, <89>, <-20>, <-125>, <-14>, <61>, <-12>, <10>, <-31>, <-119>, <85>, <10>, <24>, <56>, <101>, <-78>, <95>, <-41>, <119>, <-119>, <-23>, <96>, <-16>, <-40>, <-50>, <-36>, <-41>, <47>, <50>, <-41>, <-90>, <110>, <-37>, <75>, <-96>, <-94>, <-70>, <-13>, <-5>, <-21>, <108>, <125>, <117>, <-11>, <110>, <-16>, <-81>, <-102>, <124>, <-1>, <28>, <-116>, <127>, <41>, <125>, <114>, <-22>, <-25>, <-104>, <33>, <100>, <-27>, <10>, <-119>, <-44>, <80>, <105>, <-116>, <-11>, <-104>, <-45>, <-109>, <67>, <32>, <16>, <-108>, <36>, <29>, <45>, <24>, <10>, <-107>, <-120>, <42>, <113>, <17>, <-27>, <-113>, <74>, <91>, <-37>, <-59>, <-63>, <37>, <-87>, <103>, <-35>, <110>, <-39>, <-20>, <97>, <76>, <88>, <83>, <-24>, <-114>, <76>, <113>, <-24>, <-74>, <-126>, <-89>, <-49>, <-119>, <-53>, <29>, <-126>, <-74>, <-2>, <120>, <-52>, <-122>, <80>, <-124>, <-56>, <-59>, <-33>, <-69>, <80>, <-55>, <57>, <-33>, <43>, <-125>, <-100>, <-105>, <123>, <2>, <69>, <-65>, <-93>, <97>, <94>, <5>, <-110>, <-75>, <39>, <-79>, <1>, <61>, <91>, <103>, <94>, <-53>, <68>, <-26>, <-77>, <85>, <-63>, <-33>, <88>, <31>, <80>, <-103>, <113>, <117>, <22>, <110>, <-17>, <57>, <2>, <-127>, <-127>, <0>, <-2>, <117>, <-100>, <79>, <12>, <-24>, <-73>, <99>, <-120>, <2>, <21>, <-24>, <39>, <103>, <-25>, <-87>, <55>, <41>, <118>, <104>, <-12>, <-28>, <-79>, <-31>, <25>, <-58>, <-78>, <42>, <60>, <-94>, <-57>, <-80>, <108>, <84>, <125>, <-120>, <-48>, <-86>, <69>, <-10>, <69>, <-41>, <-45>, <-82>, <-83>, <-81>, <127>, <-117>, <-59>, <-108>, <-34>, <-82>, <9>, <120>, <82>, <-107>, <-110>, <-105>, <124>, <-79>, <-1>, <-119>, <15>, <5>, <3>, <58>, <-98>, <-98>, <21>, <85>, <28>, <-83>, <-97>, <-65>, <-100>, <65>, <-47>, <33>, <57>, <-52>, <-39>, <-100>, <28>, <58>, <-57>, <-78>, <25>, <126>, <-1>, <53>, <13>, <35>, <107>, <-71>, <0>, <-63>, <68>, <9>, <83>, <-74>, <73>, <86>, <-32>, <-96>, <88>, <-17>, <-126>, <74>, <46>, <22>, <-119>, <74>, <-15>, <117>, <23>, <124>, <119>, <-37>, <-31>, <-2>, <-9>, <-40>, <-75>, <50>, <96>, <-115>, <37>, <19>, <2>, <-127>, <-127>, <0>, <-55>, <-102>, <69>, <-121>, <-121>, <55>, <-92>, <-49>, <115>, <-7>, <-119>, <102>, <-128>, <-73>, <84>, <-121>, <-15>, <-74>, <105>, <-73>, <104>, <106>, <107>, <-96>, <113>, <3>, <-123>, <111>, <49>, <-37>, <102>, <-116>, <44>, <68>, <12>, <68>, <-51>, <-47>, <22>, <-9>, <8>, <-10>, <49>, <-61>, <122>, <-102>, <-33>, <17>, <-97>, <91>, <92>, <-75>, <-113>, <-2>, <61>, <-58>, <46>, <32>, <-81>, <-81>, <114>, <105>, <61>, <-109>, <109>, <-58>, <-69>, <60>, <81>, <-108>, <-103>, <100>, <104>, <56>, <-100>, <31>, <9>, <64>, <121>, <-72>, <21>, <34>, <-23>, <69>, <114>, <-76>, <-83>, <125>, <57>, <82>, <-111>, <120>, <-23>, <-72>, <-21>, <-82>, <-79>, <-16>, <-3>, <-40>, <59>, <-121>, <49>, <-59>, <34>, <63>, <29>, <-22>, <18>, <83>, <65>, <-47>, <-42>, <73>, <23>, <-10>, <-79>, <-90>, <-82>, <-63>, <-115>, <50>, <5>, <16>, <-41>, <-97>, <-123>, <-97>, <2>, <-127>, <-128>, <2>, <-97>, <-21>, <-16>, <-44>, <-51>, <65>, <-73>, <1>, <28>, <36>, <101>, <-76>, <-94>, <89>, <-67>, <97>, <24>, <72>, <100>, <100>, <-62>, <71>, <35>, <111>, <68>, <-95>, <105>, <-42>, <30>, <71>, <-71>, <6>, <37>, <8>, <-10>, <116>, <80>, <-115>, <80>, <49>, <0>, <60>, <-22>, <-68>, <87>, <-25>, <20>, <-26>, <0>, <-41>, <27>, <44>, <117>, <-43>, <68>, <61>, <-78>, <-38>, <82>, <107>, <-76>, <90>, <55>, <79>, <5>, <55>, <-59>, <-95>, <-86>, <-77>, <21>, <7>, <100>, <-50>, <-109>, <-49>, <56>, <108>, <-124>, <52>, <106>, <107>, <-48>, <31>, <103>, <50>, <-28>, <32>, <117>, <-57>, <-96>, <-23>, <-25>, <-118>, <-98>, <115>, <-71>, <52>, <-25>, <-40>, <113>, <-48>, <-9>, <86>, <115>, <-126>, <0>, <-119>, <-31>, <41>, <-95>, <96>, <68>, <56>, <-19>, <-53>, <-66>, <-76>, <-30>, <16>, <100>, <103>, <-38>, <17>, <44>, <-29>, <-119>, <2>, <-127>, <-127>, <0>, <-126>, <126>, <118>, <101>, <12>, <-108>, <106>, <-4>, <-47>, <112>, <3>, <-115>, <50>, <-31>, <-8>, <56>, <106>, <-80>, <13>, <107>, <-25>, <-115>, <-125>, <14>, <-2>, <56>, <46>, <69>, <-44>, <122>, <-44>, <-67>, <4>, <-26>, <35>, <30>, <-30>, <46>, <102>, <116>, <14>, <-5>, <-11>, <40>, <56>, <19>, <73>, <50>, <-55>, <-8>, <-60>, <96>, <-51>, <-52>, <-34>, <-59>, <-118>, <20>, <36>, <68>, <39>, <-123>, <-111>, <-110>, <-3>, <106>, <-74>, <-59>, <-117>, <116>, <-23>, <121>, <65>, <-80>, <-22>, <-11>, <119>, <-14>, <-95>, <23>, <19>, <-81>, <94>, <89>, <82>, <-81>, <58>, <-31>, <36>, <-102>, <-102>, <-119>, <46>, <-104>, <65>, <13>, <-6>, <38>, <40>, <-39>, <-81>, <102>, <-118>, <67>, <-75>, <48>, <47>, <-73>, <-44>, <-106>, <-55>, <-78>, <-2>, <-58>, <-97>, <89>, <82>, <-110>, <-74>, <-23>, <-105>, <-16>, <121>, <-80>, <-10>, <49>, <78>, <-73>, <2>, <-127>, <-127>, <0>, <-26>, <-74>, <42>, <-35>, <53>, <15>, <26>, <42>, <-119>, <104>, <-112>, <63>, <-9>, <108>, <49>, <-49>, <112>, <59>, <13>, <115>, <38>, <-60>, <-90>, <32>, <-82>, <-16>, <18>, <37>, <-73>, <22>, <64>, <-77>, <-14>, <-20>, <55>, <82>, <8>, <-59>, <-9>, <41>, <-104>, <99>, <-10>, <0>, <91>, <119>, <-103>, <-74>, <-27>, <41>, <-69>, <17>, <51>, <-56>, <67>, <91>, <-11>, <-3>, <-75>, <-89>, <-122>, <-10>, <-51>, <-118>, <25>, <-18>, <112>, <-108>, <-93>, <-124>, <-26>, <85>, <124>, <96>, <10>, <56>, <-124>, <90>, <9>, <96>, <-35>, <-65>, <-47>, <-33>, <24>, <-48>, <-81>, <87>, <64>, <0>, <24>, <83>, <120>, <-113>, <27>, <92>, <-53>, <-7>, <-81>, <-5>, <76>, <82>, <-55>, <-46>, <-17>, <-37>, <-118>, <-85>, <1>, <-125>, <-40>, <103>, <53>, <-77>, <39>, <55>, <-5>, <78>, <121>, <43>, <-118>, <-100>, <125>, <-111>, <-57>, <-47>, <117>, <-82>]", ((IsEqual) (o_testEncryptDecryptDefault__4)).toString());
    }
}

