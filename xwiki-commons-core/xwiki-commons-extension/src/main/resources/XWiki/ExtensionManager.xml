<?xml version="1.0" encoding="UTF-8"?>
<xwikidoc>
<web>XWiki</web>
<name>ExtensionManager</name>
<language></language>
<defaultLanguage>en</defaultLanguage>
<translation>0</translation>
<parent></parent>
<creator>XWiki.Admin</creator>
<author>XWiki.Admin</author>
<customClass></customClass>
<contentAuthor>XWiki.Admin</contentAuthor>
<creationDate>1284043167000</creationDate>
<date>1285847305000</date>
<contentUpdateDate>1285847305000</contentUpdateDate>
<version>1.1</version>
<title>Extension Manager</title>
<template></template>
<defaultTemplate></defaultTemplate>
<validationScript></validationScript>
<comment></comment>
<minorEdit>false</minorEdit>
<syntaxId>xwiki/2.0</syntaxId>
<hidden>false</hidden><attachment>
<filename>icon.png</filename>
<filesize>6519</filesize>
<author>XWiki.Admin</author>
<date>1285847285000</date>
<version>1.1</version>
<comment></comment><content>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
AAb7vZ3wcx/yAAAAAElFTkSuQmCC</content></attachment>
<object>
<class>
<name>XWiki.ConfigurableClass</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<codeToExecute>
<disabled>0</disabled>
<editor>---</editor>
<name>codeToExecute</name>
<number>7</number>
<picker>0</picker>
<prettyName>codeToExecute</prettyName>
<rows>5</rows>
<size>40</size>
<unmodifiable>0</unmodifiable>
<validationMessage></validationMessage>
<validationRegExp></validationRegExp>
<classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
</codeToExecute>
<configurationClass>
<disabled>0</disabled>
<name>configurationClass</name>
<number>3</number>
<picker>0</picker>
<prettyName>configurationClass</prettyName>
<size>30</size>
<unmodifiable>0</unmodifiable>
<validationMessage></validationMessage>
<validationRegExp></validationRegExp>
<classType>com.xpn.xwiki.objects.classes.StringClass</classType>
</configurationClass>
<configureGlobally>
<defaultValue></defaultValue>
<disabled>0</disabled>
<displayFormType>checkbox</displayFormType>
<displayType></displayType>
<name>configureGlobally</name>
<number>4</number>
<prettyName>configureGlobally</prettyName>
<unmodifiable>0</unmodifiable>
<validationMessage></validationMessage>
<validationRegExp></validationRegExp>
<classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
</configureGlobally>
<displayInSection>
<disabled>0</disabled>
<name>displayInSection</name>
<number>1</number>
<picker>0</picker>
<prettyName>displayInSection</prettyName>
<size>30</size>
<unmodifiable>0</unmodifiable>
<validationMessage></validationMessage>
<validationRegExp></validationRegExp>
<classType>com.xpn.xwiki.objects.classes.StringClass</classType>
</displayInSection>
<heading>
<disabled>0</disabled>
<name>heading</name>
<number>2</number>
<picker>0</picker>
<prettyName>heading</prettyName>
<size>30</size>
<unmodifiable>0</unmodifiable>
<validationMessage></validationMessage>
<validationRegExp></validationRegExp>
<classType>com.xpn.xwiki.objects.classes.StringClass</classType>
</heading>
<iconAttachment>
<disabled>0</disabled>
<name>iconAttachment</name>
<number>8</number>
<picker>0</picker>
<prettyName>iconAttachment</prettyName>
<size>30</size>
<unmodifiable>0</unmodifiable>
<validationMessage></validationMessage>
<validationRegExp></validationRegExp>
<classType>com.xpn.xwiki.objects.classes.StringClass</classType>
</iconAttachment>
<linkPrefix>
<disabled>0</disabled>
<name>linkPrefix</name>
<number>5</number>
<picker>0</picker>
<prettyName>linkPrefix</prettyName>
<size>30</size>
<unmodifiable>0</unmodifiable>
<validationMessage></validationMessage>
<validationRegExp></validationRegExp>
<classType>com.xpn.xwiki.objects.classes.StringClass</classType>
</linkPrefix>
<propertiesToShow>
<cache>0</cache>
<disabled>0</disabled>
<displayType>input</displayType>
<multiSelect>1</multiSelect>
<name>propertiesToShow</name>
<number>6</number>
<picker>0</picker>
<prettyName>propertiesToShow</prettyName>
<relationalStorage>1</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>20</size>
<sort>none</sort>
<unmodifiable>0</unmodifiable>
<validationMessage></validationMessage>
<validationRegExp></validationRegExp>
<values></values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</propertiesToShow>
</class>
<name>XWiki.ExtensionManager</name>
<number>0</number>
<className>XWiki.ConfigurableClass</className>
<guid>cef8c7cf-fecf-42cc-9e95-8a3be6ce936b</guid>
<property>
<codeToExecute>{{include document="XWiki.ExtensionManager" /}}</codeToExecute>
</property>
<property>
<configurationClass></configurationClass>
</property>
<property>
<configureGlobally>1</configureGlobally>
</property>
<property>
<displayInSection>Extensions</displayInSection>
</property>
<property>
<heading></heading>
</property>
<property>
<iconAttachment>icon.png</iconAttachment>
</property>
<property>
<linkPrefix></linkPrefix>
</property>
<property>
<propertiesToShow/>
</property>
</object>
<content>{{warning}}
This application is experimental, use it at your own risk.
{{/warning}}

{{velocity}}
#set($extensionManager = $services.extension)
#set($versionManager = $extensionManager.versionManager)
{{/velocity}}

{{velocity}}
{{html}}
&lt;form action="$xwiki.requestURL" enctype="multipart/form-data" method="post"&gt;
&lt;fieldset&gt;

  &lt;p&gt;
    &lt;label for="extensionid"&gt;Extension identifier&lt;/label&gt;
    &lt;input id="extensionid" name="extensionid" type="text" title="Extension identifier (&amp;lt;groupid&amp;gt;:&amp;lt;artefactid&amp;gt; for a maven extension)" #if($request.extensionid)value="${escapetool.xml($request.extensionid)}"#end /&gt;
  &lt;/p&gt;

  &lt;p&gt;
    &lt;label for="extensionversion"&gt;Extension version&lt;/label&gt;
    &lt;input id="extensionversion" name="extensionversion" type="text" title="Extension version" #if($request.extensionversion)value="${escapetool.xml($request.extensionversion)}"#end /&gt;
  &lt;/p&gt;

  &lt;span class="buttonwrapper"&gt;&lt;input type="submit" value="Resolve" name="actionresolve" class="button"/&gt;&lt;/span&gt;
  #if ($hasProgramming)
  &lt;span class="buttonwrapper"&gt;&lt;input type="submit" value="Install" name="actioninstall" class="button"/&gt;&lt;/span&gt;
  #end

&lt;/fieldset&gt;
&lt;/form&gt;
{{/html}}
{{/velocity}}

{{velocity}}
#if ($request.actionresolve)
  = Resolve

  #macro(resolveExtension $extensionid $extensionversion $extensionlevel)
    #set($extension = $extensionManager.resolve($extensionid, $extensionversion))
    #set($extensionclass = "${extension.class}")
    #foreach($index in [1..$extensionlevel])*#end #if($extensionclass.endsWith('CoreExtension'))**C**#elseif($extensionclass.endsWith('LocalExtension'))**I**#else**R**#end $extension.id ($extension.version#if($extensionversion != $extension.version) was $extensionversion#end)
    #resolveExtensionDependencies($extension)
  #end
  #macro(resolveExtensionDependencies $extension $extensionlevel)
    #set($extensionlevel = $extensionlevel + 1)
    #foreach ($dependency in $extension.dependencies)
      #resolveExtension($dependency.id, $dependency.version, $extensionlevel)
    #end
    #set($extensionlevel = $extensionlevel - 1)
  #end
  #resolveExtension($request.extensionid, $request.extensionversion, 1)

  **C**: core extension
  **I**: installed extension
  **R**: remote extension
#elseif($request.actioninstall)
  = Install

  #if($request.confirm)
    #set($extension = $extensionManager.install($request.extensionid, $request.extensionversion))
  #else
    #macro(prepareInstall $extensionid $extensionversion $extensionsToInstall $extensionsToUpgrade $extensionsSuggested, $coreExtensionsConflicts)
      #set($extension = $extensionManager.resolve($extensionid, $extensionversion))
      #set($extensionclass = "${extension.class}")
      #if (!$extensionclass.endsWith('CoreExtension') &amp;&amp; !$extensionclass.endsWith('LocalExtension'))
        #if ($extensionManager.getInstalledExtension($extensionid))
          #set($void = $extensionsToUpgrade.add($extension))
        #else
          #set($void = $extensionsToInstall.add($extension))
        #end
      #elseif ($extensionclass.endsWith('CoreExtension') &amp;&amp; $versionManager.compareVersions($extensionversion, $extension.version) &gt; 0)
        #set($void = $coreExtensionsConflicts.add([$extension,$extensionversion]))
      #end
      #prepareInstallDependencies($extension, $extensionsToInstall, $extensionsToUpgrade, $extensionsSuggested)
    #end
    #macro(prepareInstallDependencies $extension $extensionsToInstall $extensionsToUpgrade $extensionsSuggested, $coreExtensionsConflicts)
      #foreach ($dependency in $extension.dependencies)
        #prepareInstall($dependency.id, $dependency.version, $extensionsToInstall, $extensionsToUpgrade, $extensionsSuggested)
      #end
    #end
    #set($extensionsToInstall = [])
    #set($extensionsToUpgrade = [])
    #set($extensionsSuggested = [])
    #set($coreExtensionsConflicts = [])
    #prepareInstall($request.extensionid $request.extensionversion $extensionsToInstall $extensionsToUpgrade $extensionsSuggested, $coreExtensionsConflicts)
    #if ($extensionsToInstall.empty &amp;&amp; $extensionsToUpgrade.empty)
      Already installed
    #else
      #if (!$extensionsToInstall.empty)
        The following new extensions will be installed:
        #foreach ($extension in $extensionsToInstall)
          * $extension.id ($extension.version)
        #end

      #end
      #if (!$extensionsToUpgrade.empty)
        The following extensions will be upgraded:
        #foreach ($extension in $extensionsToUpgrade)
          * $extension.id ($extension.version)
        #end

      #end
      #if (!$extensionsSuggested.empty)
        Suggested:
        #foreach ($extension in $extensionsSuggested)
          * $extension.id ($extension.version)
        #end

      #end
      #if (!$coreExtensionsConflicts.empty)
        {{warning}}
          Conflict with core extensions:
          #foreach ($conflict in $coreExtensionsConflicts)
            * extension **$conflict.get(0).id** is needed in version **$conflict.get(1)** but core extension has version **$conflict.get(0).version**
          #end

          Are you sure you want to install ?
        {{/warning}}

      #end
      {{html}}
      &lt;form action="$xwiki.requestURL" enctype="multipart/form-data" method="get"&gt;
        &lt;fieldset&gt;
          &lt;input name="extensionid" value="${escapetool.xml($request.extensionid)}" type="hidden" /&gt;
          &lt;input name="extensionversion" value="${escapetool.xml($request.extensionversion)}" type="hidden" /&gt;
          &lt;input name="actioninstall" type="hidden" /&gt;
          &lt;span class="buttonwrapper"&gt;&lt;input type="submit" value="Apply" name="confirm" class="button"/&gt;&lt;/span&gt;
        &lt;/fieldset&gt;
      &lt;/form&gt;
      {{/html}}
    #end
  #end
#elseif($request.actionuninstall)
  = Uninstall

  #if($request.confirm)
    #set($extension = $extensionManager.uninstall($request.extensionid))
  #else
    #macro(prepareUninstall $extensionid $extensionsToUninstall)
      #set($void = $extensionsToUninstall.add($extensionid))
      #set($backwardDependencies = $extensionManager.getBackwardDependencies($extensionid))
      #prepareUninstallBackwardDependencies($backwardDependencies, $extensionsToUninstall)
    #end
    #macro(prepareUninstallBackwardDependencies $backwardDependencies $extensionsToUninstall)
      #foreach ($backwardDependency in $backwardDependencies)
        #prepareUninstall($backwardDependency.id, $extensionsToUninstall)
      #end
    #end
    #set($extensionsToUninstall = [])
    #prepareUninstall($request.extensionid $extensionsToUninstall)
    #if ($extensionsToUninstall.empty)
      Extension does not exists
    #else
      The following extensions will be removed:
      #foreach ($extensionid in $extensionsToUninstall)
        * $extensionid
      #end

      {{html}}
      &lt;form action="$xwiki.requestURL" enctype="multipart/form-data" method="get"&gt;
        &lt;fieldset&gt;
          &lt;input name="extensionid" value="${escapetool.xml($request.extensionid)}" type="hidden" /&gt;
          &lt;input name="extensionversion" value="${escapetool.xml($request.extensionversion)}" type="hidden" /&gt;
          &lt;input name="actionuninstall" type="hidden" /&gt;
          &lt;span class="buttonwrapper"&gt;&lt;input type="submit" value="Apply" name="confirm" class="button"/&gt;&lt;/span&gt;
        &lt;/fieldset&gt;
      &lt;/form&gt;
      {{/html}}
    #end
  #end
#end
{{/velocity}}

{{velocity}}
= Installed extensions

#set($extensions = $extensionManager.installedExtensions)
|=Id|=Version|=Type#if ($hasProgramming)
|=Actions
#end
#foreach($extension in $extensions)
|$extension.id#if ($hasProgramming)
|$extension.version|$extension.type|{{html clean="false"}}
      &lt;form action="$xwiki.requestURL" enctype="multipart/form-data" method="post"&gt;
        &lt;fieldset&gt;
          &lt;input name="extensionid" value="${escapetool.xml($extension.id)}" type="hidden" /&gt;
          &lt;input name="extensionversion" value="${escapetool.xml($extension.version)}" type="hidden" /&gt;
          &lt;span class="buttonwrapper"&gt;&lt;input type="submit" value="Uninstall" name="actionuninstall" class="button"/&gt;&lt;/span&gt;
        &lt;/fieldset&gt;
      &lt;/form&gt;
      {{/html}}
#end
#end
{{/velocity}}</content></xwikidoc>
